// Code generated by protoc-gen-go. DO NOT EDIT.
// source: particle.proto

/*
Package particle is a generated protocol buffer package.

It is generated from these files:
	particle.proto

It has these top-level messages:
	Partical
	Log
	Control
	FieldValue
*/
package particle

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Severity int32

const (
	Severity_EMERGENCY     Severity = 0
	Severity_ALERT         Severity = 1
	Severity_CRITICAL      Severity = 2
	Severity_ERROR         Severity = 3
	Severity_WARNING       Severity = 4
	Severity_NOTICE        Severity = 5
	Severity_INFORMATIONAL Severity = 6
	Severity_DEBUG         Severity = 7
)

var Severity_name = map[int32]string{
	0: "EMERGENCY",
	1: "ALERT",
	2: "CRITICAL",
	3: "ERROR",
	4: "WARNING",
	5: "NOTICE",
	6: "INFORMATIONAL",
	7: "DEBUG",
}
var Severity_value = map[string]int32{
	"EMERGENCY":     0,
	"ALERT":         1,
	"CRITICAL":      2,
	"ERROR":         3,
	"WARNING":       4,
	"NOTICE":        5,
	"INFORMATIONAL": 6,
	"DEBUG":         7,
}

func (x Severity) String() string {
	return proto.EnumName(Severity_name, int32(x))
}
func (Severity) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

// Partical is something you send the local collector
// the local collector adds time and host context
type Partical struct {
	// Types that are valid to be assigned to Partical:
	//	*Partical_Log
	Partical isPartical_Partical `protobuf_oneof:"partical"`
}

func (m *Partical) Reset()                    { *m = Partical{} }
func (m *Partical) String() string            { return proto.CompactTextString(m) }
func (*Partical) ProtoMessage()               {}
func (*Partical) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type isPartical_Partical interface {
	isPartical_Partical()
}

type Partical_Log struct {
	Log *Log `protobuf:"bytes,1,opt,name=log,oneof"`
}

func (*Partical_Log) isPartical_Partical() {}

func (m *Partical) GetPartical() isPartical_Partical {
	if m != nil {
		return m.Partical
	}
	return nil
}

func (m *Partical) GetLog() *Log {
	if x, ok := m.GetPartical().(*Partical_Log); ok {
		return x.Log
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Partical) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Partical_OneofMarshaler, _Partical_OneofUnmarshaler, _Partical_OneofSizer, []interface{}{
		(*Partical_Log)(nil),
	}
}

func _Partical_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Partical)
	// partical
	switch x := m.Partical.(type) {
	case *Partical_Log:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Log); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Partical.Partical has unexpected type %T", x)
	}
	return nil
}

func _Partical_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Partical)
	switch tag {
	case 1: // partical.log
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Log)
		err := b.DecodeMessage(msg)
		m.Partical = &Partical_Log{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Partical_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Partical)
	// partical
	switch x := m.Partical.(type) {
	case *Partical_Log:
		s := proto.Size(x.Log)
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type Log struct {
	Service  string                 `protobuf:"bytes,23,opt,name=service" json:"service,omitempty"`
	Program  string                 `protobuf:"bytes,1,opt,name=program" json:"program,omitempty"`
	Message  string                 `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Severity Severity               `protobuf:"varint,3,opt,name=severity,enum=Severity" json:"severity,omitempty"`
	Fields   map[string]*FieldValue `protobuf:"bytes,4,rep,name=fields" json:"fields,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Stack    string                 `protobuf:"bytes,5,opt,name=stack" json:"stack,omitempty"`
	Version  string                 `protobuf:"bytes,6,opt,name=version" json:"version,omitempty"`
	Tree     []string               `protobuf:"bytes,7,rep,name=tree" json:"tree,omitempty"`
}

func (m *Log) Reset()                    { *m = Log{} }
func (m *Log) String() string            { return proto.CompactTextString(m) }
func (*Log) ProtoMessage()               {}
func (*Log) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Log) GetService() string {
	if m != nil {
		return m.Service
	}
	return ""
}

func (m *Log) GetProgram() string {
	if m != nil {
		return m.Program
	}
	return ""
}

func (m *Log) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *Log) GetSeverity() Severity {
	if m != nil {
		return m.Severity
	}
	return Severity_EMERGENCY
}

func (m *Log) GetFields() map[string]*FieldValue {
	if m != nil {
		return m.Fields
	}
	return nil
}

func (m *Log) GetStack() string {
	if m != nil {
		return m.Stack
	}
	return ""
}

func (m *Log) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *Log) GetTree() []string {
	if m != nil {
		return m.Tree
	}
	return nil
}

// Control is sent back to the library upon connect
type Control struct {
	Severity Severity `protobuf:"varint,1,opt,name=severity,enum=Severity" json:"severity,omitempty"`
	Rate     float64  `protobuf:"fixed64,2,opt,name=rate" json:"rate,omitempty"`
}

func (m *Control) Reset()                    { *m = Control{} }
func (m *Control) String() string            { return proto.CompactTextString(m) }
func (*Control) ProtoMessage()               {}
func (*Control) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Control) GetSeverity() Severity {
	if m != nil {
		return m.Severity
	}
	return Severity_EMERGENCY
}

func (m *Control) GetRate() float64 {
	if m != nil {
		return m.Rate
	}
	return 0
}

type FieldValue struct {
	// Types that are valid to be assigned to Value:
	//	*FieldValue_String_
	//	*FieldValue_Double
	Value isFieldValue_Value `protobuf_oneof:"value"`
}

func (m *FieldValue) Reset()                    { *m = FieldValue{} }
func (m *FieldValue) String() string            { return proto.CompactTextString(m) }
func (*FieldValue) ProtoMessage()               {}
func (*FieldValue) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

type isFieldValue_Value interface {
	isFieldValue_Value()
}

type FieldValue_String_ struct {
	String_ string `protobuf:"bytes,1,opt,name=string,oneof"`
}
type FieldValue_Double struct {
	Double float64 `protobuf:"fixed64,2,opt,name=double,oneof"`
}

func (*FieldValue_String_) isFieldValue_Value() {}
func (*FieldValue_Double) isFieldValue_Value()  {}

func (m *FieldValue) GetValue() isFieldValue_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *FieldValue) GetString_() string {
	if x, ok := m.GetValue().(*FieldValue_String_); ok {
		return x.String_
	}
	return ""
}

func (m *FieldValue) GetDouble() float64 {
	if x, ok := m.GetValue().(*FieldValue_Double); ok {
		return x.Double
	}
	return 0
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*FieldValue) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _FieldValue_OneofMarshaler, _FieldValue_OneofUnmarshaler, _FieldValue_OneofSizer, []interface{}{
		(*FieldValue_String_)(nil),
		(*FieldValue_Double)(nil),
	}
}

func _FieldValue_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*FieldValue)
	// value
	switch x := m.Value.(type) {
	case *FieldValue_String_:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.String_)
	case *FieldValue_Double:
		b.EncodeVarint(2<<3 | proto.WireFixed64)
		b.EncodeFixed64(math.Float64bits(x.Double))
	case nil:
	default:
		return fmt.Errorf("FieldValue.Value has unexpected type %T", x)
	}
	return nil
}

func _FieldValue_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*FieldValue)
	switch tag {
	case 1: // value.string
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.Value = &FieldValue_String_{x}
		return true, err
	case 2: // value.double
		if wire != proto.WireFixed64 {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeFixed64()
		m.Value = &FieldValue_Double{math.Float64frombits(x)}
		return true, err
	default:
		return false, nil
	}
}

func _FieldValue_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*FieldValue)
	// value
	switch x := m.Value.(type) {
	case *FieldValue_String_:
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(len(x.String_)))
		n += len(x.String_)
	case *FieldValue_Double:
		n += proto.SizeVarint(2<<3 | proto.WireFixed64)
		n += 8
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

func init() {
	proto.RegisterType((*Partical)(nil), "Partical")
	proto.RegisterType((*Log)(nil), "Log")
	proto.RegisterType((*Control)(nil), "Control")
	proto.RegisterType((*FieldValue)(nil), "FieldValue")
	proto.RegisterEnum("Severity", Severity_name, Severity_value)
}

func init() { proto.RegisterFile("particle.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 424 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x92, 0xcd, 0x8a, 0xdb, 0x30,
	0x14, 0x85, 0xe3, 0xf8, 0xff, 0xba, 0x33, 0xa8, 0xa2, 0x50, 0xd1, 0x95, 0x1b, 0x28, 0x98, 0x2e,
	0x42, 0x49, 0x37, 0xa5, 0x3b, 0xc7, 0xe3, 0x64, 0x0c, 0x1e, 0xa7, 0xdc, 0xa6, 0x2d, 0x5d, 0x7a,
	0x32, 0xaa, 0x31, 0xe3, 0x89, 0x82, 0xac, 0x04, 0xf2, 0x56, 0x7d, 0xc4, 0x22, 0x5b, 0xe9, 0xcf,
	0xa2, 0xbb, 0x7b, 0xce, 0x67, 0x5d, 0x9d, 0x83, 0x05, 0xd7, 0x87, 0x5a, 0xaa, 0x76, 0xd7, 0xf1,
	0xf9, 0x41, 0x0a, 0x25, 0x66, 0xef, 0x20, 0xf8, 0x34, 0x38, 0x75, 0x47, 0x19, 0xd8, 0x9d, 0x68,
	0x98, 0x15, 0x5b, 0x49, 0xb4, 0x70, 0xe6, 0xa5, 0x68, 0x6e, 0x27, 0xa8, 0xad, 0x25, 0x40, 0x70,
	0x30, 0x5f, 0xcd, 0x7e, 0x4e, 0xc1, 0x2e, 0x45, 0x43, 0x19, 0xf8, 0x3d, 0x97, 0xa7, 0x76, 0xc7,
	0xd9, 0xcb, 0xd8, 0x4a, 0x42, 0xbc, 0x48, 0x4d, 0x0e, 0x52, 0x34, 0xb2, 0x7e, 0x1a, 0x76, 0x85,
	0x78, 0x91, 0x9a, 0x3c, 0xf1, 0xbe, 0xaf, 0x1b, 0xce, 0xa6, 0x23, 0x31, 0x92, 0xbe, 0x81, 0xa0,
	0xe7, 0x27, 0x2e, 0x5b, 0x75, 0x66, 0x76, 0x6c, 0x25, 0xd7, 0x8b, 0x70, 0xfe, 0xd9, 0x18, 0xf8,
	0x1b, 0xd1, 0x04, 0xbc, 0x1f, 0x2d, 0xef, 0x1e, 0x7a, 0xe6, 0xc4, 0x76, 0x12, 0x2d, 0x88, 0x4e,
	0x39, 0x5f, 0x0d, 0x56, 0xbe, 0x57, 0xf2, 0x8c, 0x86, 0xd3, 0x17, 0xe0, 0xf6, 0xaa, 0xde, 0x3d,
	0x32, 0x77, 0xb8, 0x68, 0x14, 0x3a, 0xc0, 0x89, 0xcb, 0xbe, 0x15, 0x7b, 0xe6, 0x8d, 0x01, 0x8c,
	0xa4, 0x14, 0x1c, 0x25, 0x39, 0x67, 0x7e, 0x6c, 0x27, 0x21, 0x0e, 0xf3, 0xab, 0x15, 0x44, 0x7f,
	0xad, 0xa6, 0x04, 0xec, 0x47, 0x7e, 0x36, 0x9d, 0xf4, 0x48, 0x5f, 0x83, 0x7b, 0xaa, 0xbb, 0xe3,
	0xd8, 0x26, 0x5a, 0x44, 0x63, 0x92, 0xaf, 0xda, 0xc2, 0x91, 0x7c, 0x9c, 0x7e, 0xb0, 0x66, 0x37,
	0xe0, 0x67, 0x62, 0xaf, 0xa4, 0xe8, 0xfe, 0xe9, 0x69, 0xfd, 0xbf, 0x27, 0x05, 0x47, 0xd6, 0x6a,
	0xdc, 0x6b, 0xe1, 0x30, 0xcf, 0x0a, 0x80, 0x3f, 0xeb, 0x29, 0x03, 0xaf, 0x57, 0xb2, 0xdd, 0x8f,
	0xff, 0x2b, 0xbc, 0x9d, 0xa0, 0xd1, 0x9a, 0x3c, 0x88, 0xe3, 0x7d, 0x67, 0x4e, 0x6b, 0x32, 0xea,
	0xa5, 0x6f, 0xe2, 0xbe, 0x55, 0x10, 0x5c, 0x2e, 0xa5, 0x57, 0x10, 0xe6, 0x77, 0x39, 0xae, 0xf3,
	0x2a, 0xfb, 0x4e, 0x26, 0x34, 0x04, 0x37, 0x2d, 0x73, 0xdc, 0x12, 0x8b, 0x3e, 0x83, 0x20, 0xc3,
	0x62, 0x5b, 0x64, 0x69, 0x49, 0xa6, 0x1a, 0xe4, 0x88, 0x1b, 0x24, 0x36, 0x8d, 0xc0, 0xff, 0x96,
	0x62, 0x55, 0x54, 0x6b, 0xe2, 0x50, 0x00, 0xaf, 0xda, 0x6c, 0x8b, 0x2c, 0x27, 0x2e, 0x7d, 0x0e,
	0x57, 0x45, 0xb5, 0xda, 0xe0, 0x5d, 0xba, 0x2d, 0x36, 0x55, 0x5a, 0x12, 0x4f, 0x1f, 0xbb, 0xc9,
	0x97, 0x5f, 0xd6, 0xc4, 0xbf, 0xf7, 0x86, 0x27, 0xf7, 0xfe, 0x57, 0x00, 0x00, 0x00, 0xff, 0xff,
	0x03, 0xd4, 0x56, 0xa6, 0x84, 0x02, 0x00, 0x00,
}
